{
  "address": "0x65B3Db8bAeF0215A1F9B14c506D2a3078b2C84AE",
  "abi": [
    {
      "inputs": [],
      "name": "ErrorCreatingContract",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ErrorCreatingProxy",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TargetAlreadyExists",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "addressOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "code",
          "type": "bytes"
        }
      ],
      "name": "deploy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x7a475866b758d6cc8f7d19d3d13526019549d7d80e90113401acdb99e7aaf635",
  "receipt": {
    "to": null,
    "from": "0x361EDc4fF0cbb4f2a5c4ff327F39ad6C94558c7d",
    "contractAddress": "0x65B3Db8bAeF0215A1F9B14c506D2a3078b2C84AE",
    "transactionIndex": 146,
    "gasUsed": "519696",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000002080000000000000000020000000000000000000800000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000008000000200000000000000000000000000000",
    "blockHash": "0x483c1d95f615e7a1af0b248e6fb6cf557f18aeb9ff065bfba82a4dbc01f105ec",
    "transactionHash": "0x7a475866b758d6cc8f7d19d3d13526019549d7d80e90113401acdb99e7aaf635",
    "logs": [
      {
        "transactionIndex": 146,
        "blockNumber": 28468108,
        "transactionHash": "0x7a475866b758d6cc8f7d19d3d13526019549d7d80e90113401acdb99e7aaf635",
        "address": "0x65B3Db8bAeF0215A1F9B14c506D2a3078b2C84AE",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000361edc4ff0cbb4f2a5c4ff327f39ad6c94558c7d"
        ],
        "data": "0x",
        "logIndex": 290,
        "blockHash": "0x483c1d95f615e7a1af0b248e6fb6cf557f18aeb9ff065bfba82a4dbc01f105ec"
      }
    ],
    "blockNumber": 28468108,
    "cumulativeGasUsed": "12377853",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "dc7c8caa48e4d125c6ac76b994b08d52",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ErrorCreatingContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrorCreatingProxy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TargetAlreadyExists\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"addressOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"code\",\"type\":\"bytes\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Create3Deployer.sol\":\"Create3Deployer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Create3Deployer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./libraries/Create3.sol\\\";\\n\\ncontract Create3Deployer is Ownable {\\n    function deploy(bytes32 salt, bytes calldata code) external onlyOwner returns (address) {\\n        return Create3.create3(salt, code);\\n    }\\n\\n    function addressOf(bytes32 salt) external view returns (address) {\\n        return Create3.addressOf(salt);\\n    }\\n}\\n\",\"keccak256\":\"0x5de16666047e25490b7380c9887523b9e50b864e8bb9194ed15cc583364767b5\",\"license\":\"MIT\"},\"contracts/libraries/Create3.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity 0.8.19;\\n\\n/**\\n  @title A library for deploying contracts EIP-3171 style.\\n  @author Agustin Aguilar <aa@horizon.io>\\n*/\\nlibrary Create3 {\\n  error ErrorCreatingProxy();\\n  error ErrorCreatingContract();\\n  error TargetAlreadyExists();\\n\\n  /**\\n    @notice The bytecode for a contract that proxies the creation of another contract\\n    @dev If this code is deployed using CREATE2 it can be used to decouple `creationCode` from the child contract address\\n\\n  0x67363d3d37363d34f0ff3d5260086017f3:\\n      0x00  0x68  0x68XXXXXXXXXXXXXXXXXX  PUSH9 bytecode  0x363d3d37363d34f0ff\\n      0x01  0x3d  0x3d                    RETURNDATASIZE  0 0x363d3d37363d34f0ff\\n      0x02  0x52  0x52                    MSTORE\\n      0x03  0x60  0x6009                  PUSH1 09        9\\n      0x04  0x60  0x6017                  PUSH1 17        23 9\\n      0x05  0xf3  0xf3                    RETURN\\n\\n  0x363d3d37363d34f0:\\n      0x00  0x36  0x36                    CALLDATASIZE    cds\\n      0x01  0x3d  0x3d                    RETURNDATASIZE  0 cds\\n      0x02  0x3d  0x3d                    RETURNDATASIZE  0 0 cds\\n      0x03  0x37  0x37                    CALLDATACOPY\\n      0x04  0x36  0x36                    CALLDATASIZE    cds\\n      0x05  0x3d  0x3d                    RETURNDATASIZE  0 cds\\n      0x06  0x34  0x34                    CALLVALUE       val 0 cds\\n      0x07  0xf0  0xf0                    CREATE          addr\\n      0x08  0xff  0xff                    SELFDESTRUCT\\n  */\\n\\n  bytes private constant _PROXY_CHILD_BYTECODE = hex\\\"68_36_3d_3d_37_36_3d_34_f0_ff_3d_52_60_09_60_17_f3\\\";\\n\\n  //                        KECCAK256_PROXY_CHILD_BYTECODE = keccak256(PROXY_CHILD_BYTECODE);\\n  bytes32 private constant _KECCAK256_PROXY_CHILD_BYTECODE = keccak256(_PROXY_CHILD_BYTECODE); // 0x21c35dbe1b344a2488cf3321d6ce542f8e9f305544ff09e4993a62319a497c1f;\\n\\n  /**\\n    @notice Creates a new contract with given `_creationCode` and `_salt`\\n    @param _salt Salt of the contract creation, resulting address will be derivated from this value only\\n    @param _creationCode Creation code (constructor) of the contract to be deployed, this value doesn't affect the resulting address\\n    @return addr of the deployed contract, reverts on error\\n  */\\n  function create3(bytes32 _salt, bytes memory _creationCode) internal returns (address addr) {\\n    // Creation code\\n    bytes memory creationCode = _PROXY_CHILD_BYTECODE;\\n\\n    // Get target final address\\n    addr = addressOf(_salt);\\n    if (addr.code.length != 0) revert TargetAlreadyExists();\\n\\n    // Create CREATE2 proxy\\n    // solhint-disable-next-line no-inline-assembly\\n    address proxy; assembly { proxy := create2(0, add(creationCode, 32), mload(creationCode), _salt)}\\n    if (proxy == address(0)) revert ErrorCreatingProxy();\\n\\n    // Call proxy with final init code\\n    // solhint-disable-next-line avoid-low-level-calls\\n    (bool success,) = proxy.call(_creationCode);\\n    if (!success || addr.code.length == 0) revert ErrorCreatingContract();\\n  }\\n\\n  /**\\n    @notice Computes the resulting address of a contract deployed using address(this) and the given `_salt`\\n    @param _salt Salt of the contract creation, resulting address will be derivated from this value only\\n    @return addr of the deployed contract, reverts on error\\n\\n    @dev The address creation formula is: keccak256(rlp([keccak256(0xff ++ address(this) ++ _salt ++ keccak256(childBytecode))[12:], 0x01]))\\n  */\\n  function addressOf(bytes32 _salt) internal view returns (address) {\\n    address proxy = address(\\n      uint160(\\n        uint256(\\n          keccak256(\\n            abi.encodePacked(\\n              hex'ff',\\n              address(this),\\n              _salt,\\n              _KECCAK256_PROXY_CHILD_BYTECODE\\n            )\\n          )\\n        )\\n      )\\n    );\\n\\n    return address(\\n      uint160(\\n        uint256(\\n          keccak256(\\n            abi.encodePacked(\\n              hex\\\"d6_94\\\",\\n              proxy,\\n              hex\\\"01\\\"\\n            )\\n          )\\n        )\\n      )\\n    );\\n  }\\n}\\n\",\"keccak256\":\"0x1f2067bac6ee6ed9c6cdb5e83714e97c81edb2056239b83dad92ed399ebf6d99\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "0x6080806040523461005b5760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a361081590816100618239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c908163715018a61461006a575080638da5cb5b14610065578063bb34534c14610060578063cdcb760a1461005b5763f2fde38b1461005657600080fd5b61025c565b6101b9565b61015f565b610108565b3461010557807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610105576100a0610348565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b3461015a5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015a57602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b600080fd5b3461015a5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015a57602061019b6004356106ba565b73ffffffffffffffffffffffffffffffffffffffff60405191168152f35b3461015a5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015a5767ffffffffffffffff60243581811161015a573660238201121561015a57806004013591821161015a57366024838301011161015a576102589160246102319201600435610434565b60405173ffffffffffffffffffffffffffffffffffffffff90911681529081906020820190565b0390f35b3461015a5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015a5760043573ffffffffffffffffffffffffffffffffffffffff811680820361015a576102b4610348565b156102c4576102c2906103c7565b005b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff60005416330361036957565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6000549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b9161043d610348565b61044681610606565b9061045460405192836105c5565b8082526020820192368282011161015a578160009260209286378301015261047a610640565b92610484816106ba565b93843b61052f576020815191016000f573ffffffffffffffffffffffffffffffffffffffff8116156105055760009283809351925af16104c261068a565b501580156104fc575b6104d25790565b60046040517f53de54b9000000000000000000000000000000000000000000000000000000008152fd5b50803b156104cb565b60046040517fbbd2fe87000000000000000000000000000000000000000000000000000000008152fd5b60046040517fcd43efa1000000000000000000000000000000000000000000000000000000008152fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6080810190811067ffffffffffffffff8211176105a457604052565b610559565b6040810190811067ffffffffffffffff8211176105a457604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176105a457604052565b67ffffffffffffffff81116105a457601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b604051906040820182811067ffffffffffffffff8211176105a457604052601182527f68363d3d37363d34f0ff3d5260096017f30000000000000000000000000000006020830152565b3d156106b5573d9061069b82610606565b916106a960405193846105c5565b82523d6000602084013e565b606090565b6107c36107dc916106c9610640565b602081519101206040519060208201927fff0000000000000000000000000000000000000000000000000000000000000084523060601b6021840152603583015260558201526055815261071c81610588565b5190206040517fffffffffffffffffffffffffffffffffffffffff00000000000000000000000060208201927fd694000000000000000000000000000000000000000000000000000000000000845260601b1660228201527f01000000000000000000000000000000000000000000000000000000000000006036820152601781526107a7816105a9565b51902073ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b9056fea264697066735822122099b8385525f2b66a94376f4e4427c2d91c29680f553260667104549d2942f59b64736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436101561001257600080fd5b6000803560e01c908163715018a61461006a575080638da5cb5b14610065578063bb34534c14610060578063cdcb760a1461005b5763f2fde38b1461005657600080fd5b61025c565b6101b9565b61015f565b610108565b3461010557807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610105576100a0610348565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b3461015a5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015a57602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b600080fd5b3461015a5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015a57602061019b6004356106ba565b73ffffffffffffffffffffffffffffffffffffffff60405191168152f35b3461015a5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015a5767ffffffffffffffff60243581811161015a573660238201121561015a57806004013591821161015a57366024838301011161015a576102589160246102319201600435610434565b60405173ffffffffffffffffffffffffffffffffffffffff90911681529081906020820190565b0390f35b3461015a5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015a5760043573ffffffffffffffffffffffffffffffffffffffff811680820361015a576102b4610348565b156102c4576102c2906103c7565b005b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff60005416330361036957565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6000549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b9161043d610348565b61044681610606565b9061045460405192836105c5565b8082526020820192368282011161015a578160009260209286378301015261047a610640565b92610484816106ba565b93843b61052f576020815191016000f573ffffffffffffffffffffffffffffffffffffffff8116156105055760009283809351925af16104c261068a565b501580156104fc575b6104d25790565b60046040517f53de54b9000000000000000000000000000000000000000000000000000000008152fd5b50803b156104cb565b60046040517fbbd2fe87000000000000000000000000000000000000000000000000000000008152fd5b60046040517fcd43efa1000000000000000000000000000000000000000000000000000000008152fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6080810190811067ffffffffffffffff8211176105a457604052565b610559565b6040810190811067ffffffffffffffff8211176105a457604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176105a457604052565b67ffffffffffffffff81116105a457601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b604051906040820182811067ffffffffffffffff8211176105a457604052601182527f68363d3d37363d34f0ff3d5260096017f30000000000000000000000000000006020830152565b3d156106b5573d9061069b82610606565b916106a960405193846105c5565b82523d6000602084013e565b606090565b6107c36107dc916106c9610640565b602081519101206040519060208201927fff0000000000000000000000000000000000000000000000000000000000000084523060601b6021840152603583015260558201526055815261071c81610588565b5190206040517fffffffffffffffffffffffffffffffffffffffff00000000000000000000000060208201927fd694000000000000000000000000000000000000000000000000000000000000845260601b1660228201527f01000000000000000000000000000000000000000000000000000000000000006036820152601781526107a7816105a9565b51902073ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b9056fea264697066735822122099b8385525f2b66a94376f4e4427c2d91c29680f553260667104549d2942f59b64736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 6370,
        "contract": "contracts/Create3Deployer.sol:Create3Deployer",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}